/* src/styles.css */
@import "tailwindcss";
/* 全体の背景色を黒に設定 */
html,
body,
#root {
  background-color: #000000;
  color: white;
}

/* BattleStage 背景色を黒に */
.compact-battle-stage,
[class*="flex-[0.45]"],
[class*="flex-[0.4]"] {
  background-color: #000000;
}

/* 背景画像の下にある要素の背景色も黒に */
.absolute.inset-0 {
  background-color: #000000;
}

/* バトルエフェクトのコンテナ背景も黒に */
.w-full.flex.flex-col {
  background-color: #000000;
}

@keyframes hitAnimation {
  0% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  50% {
    transform: translateX(5px);
  }
  75% {
    transform: translateX(-5px);
  }
  100% {
    transform: translateX(0);
  }
}

.animate-hit {
  animation: hitAnimation 0.3s ease-in-out;
}

@keyframes hit {
  0% {
    transform: translateY(0);
    filter: brightness(1);
  }
  50% {
    transform: translateY(10px);
    filter: brightness(5);
  }
  100% {
    transform: translateY(0);
    filter: brightness(1);
  }
}

.animate-phit {
  animation: hit 0.3s ease;
}

/* 炎を吐く */
@keyframes flashRed {
  0% {
    filter: brightness(1) saturate(1);
    transform: translateY(0);
  }
  50% {
    filter: brightness(1.5) sepia(1) saturate(5) hue-rotate(10deg);
    transform: translateY(10px);
  }
  100% {
    filter: brightness(1) saturate(1);
    transform: translateY(0);
  }
}

.animate-fire {
  animation: flashRed 0.3s ease-in-out;
}

/* コンテナに3D効果を付与 */
.target-indicator-container {
  perspective: 500px; /* 立体感の強さ（調整可能） */
}

/* 3D横回転アニメーション */
@keyframes spin3d {
  from {
    transform: rotateY(0deg);
  }
  to {
    transform: rotateY(360deg);
  }
}

/* ターゲットインジケーター（下向き三角形）のスタイル */
.target-indicator {
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 15px solid yellow;
  transform-origin: center;
  /* transform-style とアニメーションで3D回転 */
  transform-style: preserve-3d;
  animation: spin3d 1s linear infinite;
}

@keyframes damageFloat {
  0% {
    opacity: 1;
    transform: translate(-50%, 0) scale(1);
    text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
  }
  50% {
    opacity: 1;
    transform: translate(-50%, -10px) scale(1.2);
    text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.8);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -20px) scale(1);
    text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
  }
}

.animate-damage-fade {
  animation: damageFloat 1s ease-out forwards;
  font-size: 2rem; /* フォントサイズを大きくする */
  color: #ff3333; /* 鮮やかな赤色 */
  font-weight: bold;
  pointer-events: none;
}

/* html, body {
    height: 100%;
    overflow: hidden;
    overscroll-behavior: none;
  } */

/* styles.css またはグローバルCSS */
.no-scroll {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

@keyframes comboFloat {
  0% {
    opacity: 1;
    transform: translate(-50%, 0);
  }
  100% {
    opacity: 0;
    transform: translate(-50%, -50px);
  }
}
:root {
  --combo-animation-duration: 1s;
}

.animate-combo-fade {
  animation: comboFloat var(--combo-animation-duration) ease-out forwards;
}

/* 画面がフラッシュして揺れるエフェクト */
@keyframes screenFlashShake {
  0% {
    opacity: 1;
    transform: translate(0, 0);
  }
  10% {
    opacity: 0.3;
    transform: translate(-10px, 5px);
  }
  20% {
    opacity: 1;
    transform: translate(10px, -5px);
  }
  30% {
    opacity: 0.3;
    transform: translate(-10px, 5px);
  }
  40% {
    opacity: 1;
    transform: translate(10px, -5px);
  }
  100% {
    opacity: 1;
    transform: translate(0, 0);
  }
}

.screen-flash-shake {
  animation: screenFlashShake 0.5s ease-in-out;
}

@keyframes screenShake {
  0% {
    transform: translate(0, 0);
  }
  10% {
    transform: translate(-5px, 3px);
  }
  20% {
    transform: translate(5px, -3px);
  }
  30% {
    transform: translate(-5px, 3px);
  }
  40% {
    transform: translate(5px, -3px);
  }
  100% {
    transform: translate(0, 0);
  }
}

.screen-shake {
  animation: screenShake 0.5s ease-in-out;
}

/* キーボード表示時のスタイル */
.keyboard-open {
  position: fixed;
  width: 100%;
  height: var(--window-height, 100%);
  overflow: hidden;
}

/* iOS用のオーバースクロール動作を無効化 */
html,
body {
  position: fixed;
  height: 100%;
  overflow: auto;
  width: 100%;
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
}

/* キーボード表示時に高さを調整するためのカスタムプロパティ */
:root {
  --window-height: 100vh;
}

/* バトルインターフェースの入力欄をキーボード表示時にもスクロールさせない */
.input-wrapper {
  position: relative;
  z-index: 1000;
}

/* src/styles.css に追加 - コンパクトモード最適化用CSS */

/* コンパクトモード時のBattleStage最適化 */
.compact-battle-stage {
  /* 余白を最小化 */
  margin: 0;
  padding: 0;

  /* コンテンツをより効率的に表示 */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  background-color: #111111;
}

/* キーボード表示時のQuestion Container最適化 */
.compact-battle-stage .question-container {
  margin-top: 3px;
  margin-bottom: 3px;
  border-width: 1px;
}

/* キーボード表示時のコンボ表示最適化 */
.compact-battle-stage .combo-display {
  font-size: 0.875rem;
  transform: translateY(-5px);
}

/* キーボード表示時のエネミー表示最適化 */
.compact-battle-stage .enemy-container {
  transform-origin: bottom center;
}

/* コンパクトモードでの攻撃ゲージ */
.compact-battle-stage .attack-gauge {
  height: 4px;
  width: 50px;
}

/* コンパクトモード時の余白調整 */
@media (max-height: 600px) {
  .compact-battle-stage {
    /* 非常に小さい画面での追加最適化 */
    transform: scale(0.95);
    transform-origin: center top;
  }
}

/* 敵の体力ゲージ表示を最適化 */
.compact-battle-stage .enemy-health-bar {
  /* 体力ゲージの位置を調整 */
  position: absolute;
  bottom: -8px !important; /* !importantで他のスタイルを上書き */
  left: 50%;
  /*transform: translateX(-50%);*/

  /* サイズと表示を最適化 */
  width: 50px !important;
  height: 8px !important;
  background-color: rgba(200, 200, 200, 0.7) !important;
  border-width: 1px !important;
}

/* 体力ゲージの内部バー */
.compact-battle-stage .enemy-health-bar > div {
  height: 100%;
}

/* コンパクトモード時のBattleStage-BattleInterface間のギャップを確保 */
.keyboard-open .flex-[0.3] {
  padding-bottom: 10px;
}

/* キーボード表示時にBattleInterfaceの上部にスペースを作る */
.keyboard-open .battle-interface-container {
  margin-top: 10px;
}

/* ヘルスゲージのボーダーを調整 */
.enemy-health-bar {
  border: 2px solid rgba(255, 255, 255, 0.5);
}

/* キーボード表示時のみのスタイル */
@media (max-height: 580px) {
  .compact-battle-stage .enemy-container {
    /* 非常に小さい画面でさらに上方に配置 */
    transform: translateY(-15px);
  }
}

/* キーボード表示時のスタイル - 画面ぶれ防止 */
.keyboard-open {
  position: fixed;
  width: 100%;
  height: var(--window-height, 100%);
  overflow: hidden;
  transition: none !important; /* 遷移アニメーションをオフにして画面のぶれを防止 */
}

/* iOS用のオーバースクロール動作を無効化 - 追加対策 */
html,
body {
  position: fixed;
  height: 100%;
  overflow: auto;
  width: 100%;
  overscroll-behavior: none;
  -webkit-overflow-scrolling: touch;
  touch-action: manipulation; /* タッチでのダブルタップズームなどを防止 */
}

/* タップ時の青いハイライトを非表示 */
* {
  -webkit-tap-highlight-color: transparent;
}

/* 入力フィールドタップ時の挙動を安定化 */
input {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  outline: none;
}

/* スキルアニメーション用CSS - styles.css に追加 */

/* 浮き上がるアニメーション（回復など） */
@keyframes floatUp {
    0% {
      opacity: 0;
      transform: translateY(0);
    }
    10% {
      opacity: 1;
    }
    80% {
      opacity: 1;
    }
    100% {
      opacity: 0;
      transform: translateY(-30px);
    }
  }
  
  .animate-float-up {
    animation: floatUp 1s ease-out forwards;
  }
  
  /* 爆発アニメーション（ダメージスキルなど） */
  @keyframes explosion {
    0% {
      opacity: 0;
      transform: scale(0.5);
    }
    10% {
      opacity: 1;
      transform: scale(1.2);
    }
    20% {
      transform: scale(0.9);
    }
    30% {
      transform: scale(1.1);
    }
    50% {
      transform: scale(1);
    }
    80% {
      opacity: 1;
    }
    100% {
      opacity: 0;
      transform: scale(1.3);
    }
  }
  
  .animate-explosion {
    animation: explosion 1s ease-out forwards;
  }
  
  /* 回転アニメーション（バフ/デバフなど） */
  @keyframes rotate {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
  
  .animate-rotate {
    animation: rotate 1s linear infinite;
  }
  
  /* スキルスロットのクールダウン表示用 */
  .cooldown-overlay {
    position: absolute;
    inset: 0;
    background: rgba(0, 0, 0, 0.7);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: bold;
    color: white;
  }
  
  /* スキルがアクティブ状態のときのハイライト */
  .skill-active {
    border: 2px solid #ffc107;
    box-shadow: 0 0 10px rgba(255, 193, 7, 0.5);
  }
  
  /* 使用不可能なスキルの表示 */
  .skill-disabled {
    opacity: 0.5;
    filter: grayscale(70%);
  }
  
  /* スキル効果の光るエフェクト */
  @keyframes glowing {
    0% {
      box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
    }
    50% {
      box-shadow: 0 0 20px rgba(255, 255, 255, 0.8);
    }
    100% {
      box-shadow: 0 0 5px rgba(255, 255, 255, 0.5);
    }
  }
  
  .animate-glow {
    animation: glowing 1.5s ease-in-out infinite;
  }
  
  /* MP不足警告の点滅エフェクト */
  @keyframes mpWarning {
    0% {
      background-color: rgba(220, 38, 38, 0.7);
    }
    50% {
      background-color: rgba(220, 38, 38, 0.4);
    }
    100% {
      background-color: rgba(220, 38, 38, 0.7);
    }
  }
  
  .animate-mp-warning {
    animation: mpWarning 1s ease-in-out infinite;
  }