/* src/styles/animations.css - アニメーション定義 */

/* ================= 基本アニメーション ================= */

/* 敵のヒットアニメーション */
@keyframes hitAnimation {
    0% { transform: translateX(0); }
    25% { transform: translateX(-5px); }
    50% { transform: translateX(5px); }
    75% { transform: translateX(-5px); }
    100% { transform: translateX(0); }
  }
  
  .animate-hit {
    animation: hitAnimation 0.3s ease-in-out;
  }
  
  /* プレイヤーのヒット時のアニメーション */
  @keyframes hit {
    0% {
      transform: translateY(0);
      filter: brightness(1);
    }
    50% {
      transform: translateY(10px);
      filter: brightness(5);
    }
    100% {
      transform: translateY(0);
      filter: brightness(1);
    }
  }
  
  .animate-phit {
    animation: hit 0.3s ease;
  }
  
  /* 炎アニメーション */
  @keyframes flashRed {
    0% {
      filter: brightness(1) saturate(1);
      transform: translateY(0);
    }
    50% {
      filter: brightness(1.5) sepia(1) saturate(5) hue-rotate(10deg);
      transform: translateY(10px);
    }
    100% {
      filter: brightness(1) saturate(1);
      transform: translateY(0);
    }
  }
  
  .animate-fire {
    animation: flashRed 0.3s ease-in-out;
  }
  
  /* 3D横回転アニメーション */
  @keyframes spin3d {
    from { transform: rotateY(0deg); }
    to { transform: rotateY(360deg); }
  }
  
  /* ダメージ数値のアニメーション */
  @keyframes damageFloat {
    0% {
      opacity: 1;
      transform: translate(-50%, 0) scale(1);
      text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.7);
    }
    50% {
      opacity: 1;
      transform: translate(-50%, -10px) scale(1.2);
      text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.8);
    }
    100% {
      opacity: 0;
      transform: translate(-50%, -20px) scale(1);
      text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.5);
    }
  }
  
  .animate-damage-fade {
    animation: damageFloat 1s ease-out forwards;
    font-size: 2rem;
    color: #ff3333;
    font-weight: bold;
    pointer-events: none;
  }
  
  /* コンボ表示アニメーション */
  @keyframes comboFloat {
    0% {
      opacity: 1;
      transform: translate(-50%, 0);
    }
    100% {
      opacity: 0;
      transform: translate(-50%, -50px);
    }
  }
  
  .animate-combo-fade {
    animation: comboFloat var(--combo-animation-duration) ease-out forwards;
  }
  
  /* 画面がフラッシュして揺れるエフェクト */
  @keyframes screenFlashShake {
    0% {
      opacity: 1;
      transform: translate(0, 0);
    }
    10% {
      opacity: 0.3;
      transform: translate(-10px, 5px);
    }
    20% {
      opacity: 1;
      transform: translate(10px, -5px);
    }
    30% {
      opacity: 0.3;
      transform: translate(-10px, 5px);
    }
    40% {
      opacity: 1;
      transform: translate(10px, -5px);
    }
    100% {
      opacity: 1;
      transform: translate(0, 0);
    }
  }
  
  .screen-flash-shake {
    animation: screenFlashShake 0.5s ease-in-out;
  }
  
  /* 画面揺れのみ */
  @keyframes screenShake {
    0% { transform: translate(0, 0); }
    10% { transform: translate(-5px, 3px); }
    20% { transform: translate(5px, -3px); }
    30% { transform: translate(-5px, 3px); }
    40% { transform: translate(5px, -3px); }
    100% { transform: translate(0, 0); }
  }
  
  .screen-shake {
    animation: screenShake 0.5s ease-in-out;
  }
  
  /* ================= プレイヤーアニメーション ================= */
  
  /* プレイヤー攻撃のアニメーション */
  @keyframes player-attack-m {
    0% { transform: translateX(-50%) translateY(0) scale(1); }
    50% { transform: translateX(-50%) translateY(-8px) scale(0.95); }
    100% { transform: translateX(-50%) translateY(0) scale(1); }
  }
  
  .player-attack-m {
    animation: player-attack-m 0.5s ease-in-out;
  }
  
  /* プレイヤーがダメージを受けた時のアニメーション */
  @keyframes player-shake {
    0%, 100% { transform: translateX(-50%) rotate(0deg); }
    10% { transform: translateX(-52%) rotate(-2deg); }
    20% { transform: translateX(-48%) rotate(2deg); }
    30% { transform: translateX(-52%) rotate(-2deg); }
    40% { transform: translateX(-48%) rotate(2deg); }
    50% { transform: translateX(-51%) rotate(-1deg); }
    60% { transform: translateX(-49%) rotate(1deg); }
    70% { transform: translateX(-50.5%) rotate(-0.5deg); }
    80% { transform: translateX(-49.5%) rotate(0.5deg); }
  }
  
  .player-shake {
    animation: player-shake 0.6s ease;
  }
  
  /* プレイヤーの瀕死状態アニメーション */
  @keyframes player-low-health {
    0%, 100% { filter: brightness(0.9) grayscale(20%); }
    50% { filter: brightness(0.8) grayscale(30%) sepia(0.2); }
  }
  
  .player-critical {
    animation: player-low-health 3s infinite ease-in-out;
  }
  
  /* ================= エフェクトアニメーション ================= */
  
  /* 浮き上がるアニメーション（回復など） */
  @keyframes floatUp {
    0% { opacity: 0; transform: translateY(0); }
    10% { opacity: 1; }
    80% { opacity: 1; }
    100% { opacity: 0; transform: translateY(-30px); }
  }
  
  .animate-float-up {
    animation: floatUp 1s ease-out forwards;
  }
  
  /* 爆発アニメーション（ダメージスキルなど） */
  @keyframes explosion {
    0% { opacity: 0; transform: scale(0.5); }
    10% { opacity: 1; transform: scale(1.2); }
    20% { transform: scale(0.9); }
    30% { transform: scale(1.1); }
    50% { transform: scale(1); }
    80% { opacity: 1; }
    100% { opacity: 0; transform: scale(1.3); }
  }
  
  .animate-explosion {
    animation: explosion 1s ease-out forwards;
  }
  
  /* 回転アニメーション */
  @keyframes rotate {
    0% { transform: rotate(0deg); }
    100% { transform: rotate(360deg); }
  }
  
  .animate-rotate {
    animation: rotate 1s linear infinite;
  }
  
  /* スケールインアニメーション */
  @keyframes scaleIn {
    0% { transform: scale(0.5); opacity: 0; }
    50% { transform: scale(1.2); opacity: 1; }
    100% { transform: scale(1); opacity: 1; }
  }
  
  .animate-scale-in {
    animation: scaleIn 0.5s ease-out forwards;
  }
  
  /* スキル獲得アニメーション */
  @keyframes skill-acquired-animation {
    0% { transform: scale(0.8); opacity: 0; }
    30% { transform: scale(1.1); opacity: 1; }
    70% { transform: scale(0.95); opacity: 1; }
    100% { transform: scale(1); opacity: 1; }
  }
  
  .animate-skill-acquired {
    animation: skill-acquired-animation 0.8s ease-out forwards;
  }
  
  /* アクティブスキルの点滅アニメーション */
  @keyframes pulse-active {
    0%, 100% { box-shadow: 0 0 5px rgba(255, 215, 0, 0.5); }
    50% { box-shadow: 0 0 15px rgba(255, 215, 0, 0.8); }
  }
  
  .pulse-active {
    animation: pulse-active 1.5s infinite;
  }
  
  /* スキル名コールアウトのアニメーション */
  @keyframes skill-callout {
    0% { opacity: 0; transform: translateY(10px); }
    20% { opacity: 1; transform: translateY(-5px); }
    80% { opacity: 1; transform: translateY(-15px); }
    100% { opacity: 0; transform: translateY(-25px); }
  }
  
  .animate-skill-callout {
    animation: skill-callout 1.5s ease-out forwards;
  }
  
  /* 低HP時の点滅アニメーション */
  @keyframes low-health-pulse {
    0% {
      border-color: rgba(220, 38, 38, 0.5);
      box-shadow: inset 0 0 5px 2px rgba(220, 38, 38, 0.2);
    }
    50% {
      border-color: rgba(239, 68, 68, 0.8);
      box-shadow: inset 0 0 8px 3px rgba(239, 68, 68, 0.4);
    }
    100% {
      border-color: rgba(220, 38, 38, 0.5);
      box-shadow: inset 0 0 5px 2px rgba(220, 38, 38, 0.2);
    }
  }
  
  .low-health-border {
    animation: low-health-pulse 2s infinite ease-in-out;
    border-width: 2px;
    border-style: solid;
  }
  
  /* 波紋エフェクト */
  @keyframes ripple {
    0% { transform: scale(0); opacity: 1; }
    100% { transform: scale(3); opacity: 0; }
  }
  
  .animate-ripple {
    animation: ripple 1s ease-out forwards;
  }
  
  /* パーティクルの動き */
  @keyframes particleMove {
    0% {
      transform: translate(0, 0) scale(1);
      opacity: var(--initial-opacity, 0.8);
    }
    50% { opacity: var(--initial-opacity, 0.8); }
    100% {
      transform: translate(
          calc(var(--direction-x, 1) * var(--distance-x, 60px)),
          calc(var(--direction-y, 1) * var(--distance-y, 60px))
        )
        scale(0);
      opacity: 0;
    }
  }
  
  /* 攻撃ゲージ警告アニメーション */
  @keyframes attack-warning-pulse {
    0% { opacity: 0.8; background-color: rgb(239, 68, 68); }
    50% { opacity: 1; background-color: rgb(248, 113, 113); }
    100% { opacity: 0.8; background-color: rgb(239, 68, 68); }
  }
  
  .animate-attack-warning {
    animation: attack-warning-pulse 0.5s infinite;
  }
  
  /* 攻撃準備完了時の点滅エフェクト */
  @keyframes attack-ready-flash {
    0%, 100% {
      background-color: rgb(220, 38, 38);
      box-shadow: 0 0 6px 2px rgba(248, 113, 113, 0.6);
    }
    50% {
      background-color: rgb(254, 202, 202);
      box-shadow: 0 0 10px 3px rgba(248, 113, 113, 0.8);
    }
  }
  
  .animate-attack-ready-flash {
    animation: attack-ready-flash 0.3s infinite;
  }
  
  /* 回復フラッシュ効果 */
  @keyframes healFlash {
    0% { filter: brightness(1); }
    50% { filter: brightness(1.3) hue-rotate(120deg); }
    100% { filter: brightness(1); }
  }
  
  .heal-flash {
    animation: healFlash 0.5s;
  }
  
  /* 炎系スキル使用時の画面効果 */
  @keyframes fireSkillFlash {
    0% { filter: brightness(1) saturate(1); }
    25% { filter: brightness(1.2) saturate(1.2) hue-rotate(-10deg); }
    100% { filter: brightness(1) saturate(1); }
  }
  
  .fire-skill-flash {
    animation: fireSkillFlash 0.5s;
  }
  
  /* 火のオーラアニメーション */
  @keyframes fireAura {
    0%, 100% { opacity: 0.6; transform: scale(0.95); }
    50% { opacity: 0.8; transform: scale(1.05); }
  }